{"version":3,"sources":["assets/images/logo_greenblue.png","assets/images/menu.svg","components/menu/dropdown.tsx","components/menu/index.tsx","assets/images/globe.png","components/accountModal.tsx","assets/images/qrCodeIcon.svg","assets/images/qrCodeScanning.svg","assets/images/qrCodeBar.svg","store/selector/user.selector.ts","helpers/currency.ts","utils/path_utils.ts","pages/home.tsx","pages/dashboard.tsx","assets/images/walter_head.png","assets/images/background/text_bubble_small.svg","assets/images/collection/1.png","assets/images/collection/2.png","assets/images/collection/3.png","assets/images/collection/4.png","assets/images/collection/5.png","assets/images/collection/7.png","components/swiper.tsx","pages/login.tsx","assets/images/menu_icon.svg","pages/index.tsx"],"names":["Dropdown","_ref","onDisconnect","onPayments","connectionStatus","account","ensName","btnDropdownRef","useRef","popoverRef","dropdownPopoverShow","setDropdownPopoverShow","React","useState","name","getDisplayName","_jsx","className","children","_jsxs","src","menuIcon","alt","ref","onClick","current","createPopper","placement","style","minWidth","href","getConnectionStatusDisplay","Menu","size","onSelectAccount","items","disabled","status","history","useHistory","width","position","draggable","onHomeClicked","console","info","replace","onPaymentsClick","AccountModal","accounts","open","onClose","onSelect","Modal","onRequestClose","content","top","left","right","bottom","marginRight","transform","isOpen","map","item","namespace","reference","address","split","chainData","_Fragment","data","borderColor","concat","rgb","boxShadow","backgroundColor","logo","ellipseAddress","selectUserState","rootState","userState","selectAccountInfo","createSelector","isLogged","loading","nonce","accountInfo","selectEnsName","selectTickers","tickers","selectCreateTransaction","transactionData","transactionInProgress","transactionInfo","order","merchantInfo","findTicker","currencySymbol","ethTicker","find","value","currency","e","extractOrderFromUrl","url","requireStatusItems","arguments","length","undefined","Error","queryString","includes","substring","lastIndexOf","parsed","URLSearchParams","log","amount","Number","get","externalOrderId","orderTrackingId","merchantAddress","HomePage","dispatch","useDispatch","query","useLocation","search","setLoading","scanning","setScanning","qrCodeUrl","setQrCodeUrl","redirected","setRedirected","transactionCreatedLock","setTransactionCreatedLock","balances","refreshBalances","useWalletConnectClient","accountBalance","getNonZeroAccountBalance","balanceString","token","useSelector","trxCreated","useEffect","transaction","push","createTransaction","toast","error","message","autoClose","startScanning","ethTotal","convertUSDtoToken","balanceUsd","price","userAction","setCreateTransaction","balanceN","balanceUSD","convertTokenToUSD","tokenSymbol","processScanResult","resultText","qrCode","QrReader","onResult","result","getText","constraints","facingMode","scanDelay","containerStyle","overflow","videoStyle","height","objectFit","backgroundImage","background","backgroundSize","filter","backgroundRepeat","backfaceVisibility","alignSelf","QRTarget","QRLine","QRIcon","fontStyle","async","fontFamily","fontSize","numeral","format","Dashboard","mainPage","Switch","Route","path","component","Redirect","to","SwiperGallery","Slider","dots","infinite","slidesToShow","slidesToScroll","centerMode","centerPadding","autoplay","autoplaySpeed","pauseOnHover","adaptiveHeight","nft1","nft2","nft3","nft4","nft5","nft6","Login","qrCodeUri","showQRCode","setShowQRCode","clickCounter","setClickCounter","t","useTranslation","rotateStar","setRotateStar","onCopyLinkClicked","navigator","clipboard","writeText","QRCodeStyling","type","dotsOptions","gradient","rotation","colorStops","offset","color","cornersDotOptions","cornersSquareOptions","backgroundOptions","qrCodeElement","document","getElementById","innerHTML","append","gallery","socialLinks","rel","target","xmlns","fill","viewBox","d","startDialog","visibility","textBubbleSmall","justifySelf","MouseParallaxContainer","containerStyles","display","gridTemplateColumns","resetOnLeave","MouseParallaxChild","factorX","factorY","updateStyles","star","mainCharacter","Main","openSwitchAccount","setOpenSwitchAccount","session","isInitializing","connect","disconnect","switchAccount","initialized","isLoading","menuItems","route","icon","VaultIcon","ens","Landing"],"mappings":"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","file":"static/js/4.23b29021.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo_greenblue.ef3d2756.png\";","export default __webpack_public_path__ + \"static/media/menu.e527a2ba.svg\";","import React, {useRef} from \"react\";\nimport {createPopper} from \"@popperjs/core\";\nimport menuIcon from '../../assets/images/menu.svg';\nimport {getConnectionStatusDisplay, getDisplayName} from \"../../utils\";\n\ninterface Props {\n    onDisconnect?: () => void;\n    onPayments?: () => void;\n    connectionStatus: string;\n    account: string;\n    ensName: string | null;\n}\n\nexport const Dropdown = ({ onDisconnect = () => {}, onPayments = () => {}, connectionStatus, account, ensName = null}: Props) => {\n    const btnDropdownRef = useRef<HTMLImageElement>(null);\n    const popoverRef = useRef<HTMLDivElement>(null);\n    const color = 'white';\n    const [dropdownPopoverShow, setDropdownPopoverShow] = React.useState(false);\n    const openDropdownPopover = () => {\n        if (btnDropdownRef.current && popoverRef.current) {\n            createPopper(btnDropdownRef.current, popoverRef.current, {\n                placement: \"bottom\",\n            });\n            setDropdownPopoverShow(true);\n        }\n\n    };\n    const closeDropdownPopover = () => {\n        setDropdownPopoverShow(false);\n    };\n    const name = getDisplayName(account, ensName)\n\n    return (\n            <div className=\"flex flex-col\">\n                <div className=\"w-full sm:w-6/12 md:w-4/12 px-4 min-w-max\">\n                    <div className=\"relative flex align-middle w-full\">\n                        <img\n                            className=\"text-white w-10 h-10 font-bold uppercase text-sm shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150 cursor-pointer\"\n\n                            src={menuIcon} alt=\"\"\n                            ref={btnDropdownRef}\n                            onClick={() => {\n                                dropdownPopoverShow\n                                    ? closeDropdownPopover()\n                                    : openDropdownPopover();\n                            }}\n                        >\n\n                        </img>\n                        <div\n                            ref={popoverRef}\n                            className={\n                                (dropdownPopoverShow ? \"block \" : \"hidden \") +\n                                (color === \"white\" ? \"bg-white \" : \"\") +\n                                \"text-base z-10 py-2 list-none rounded shadow-lg mt-1\"\n                            }\n                            style={{ minWidth: \"12rem\" }}\n                        >\n                            <a\n                                href=\"/orders\"\n                                className={\n                                    \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent \" +\n                                    (color === \"white\" ? \" text-slate-700\" : \"text-white\")\n                                }\n                                onClick={onPayments}\n                            >\n                                List Orders\n                            </a>\n                            <p\n                                className={\n                                    \"text-sm py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent cursor-pointer\" +\n                                    (color === \"white\" ? \" text-slate-700\" : \"text-white\")\n                                }\n                                onClick={onDisconnect}\n                            >\n                                Disconnect\n                            </p>\n                            <div className=\"h-0 my-2 border border-solid border-t-0 border-slate-800 opacity-25\" />\n                            <div\n                                className={\n                                    \"text-xs py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent \" +\n                                    (color === \"white\" ? \" text-slate-700\" : \"text-white\")\n                                }\n                            >\n                                {getConnectionStatusDisplay(account)}\n                            </div>\n                            <div\n                                className={\n                                    \"text-xs py-2 px-4 font-normal block w-full whitespace-nowrap bg-transparent \" +\n                                    (color === \"white\" ? \" text-slate-700\" : \"text-white\")\n                                }\n                            >\n                                {name}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n    );\n};\n","import React from 'react';\n\nimport menuIcon from '../../assets/images/logo_greenblue.png';\nimport {IMenuItem} from '../../models';\nimport {Dropdown} from \"./dropdown\";\nimport {getDisplayName} from \"../../utils\";\nimport {useHistory} from \"react-router-dom\";\n\nexport const Menu = ({\n                       size,\n                       onDisconnect = () => {},\n                       onSelectAccount = () => {},\n                       items,\n                       disabled = false,\n                       status,\n                       ensName = null,\n                       account = '',\n                     }: Props) => {\n      const history = useHistory()\n      const name = getDisplayName(account, ensName)\n\n      const onPaymentsClick = () => {\n          console.info(`not implemented`)\n      }\n      const onHomeClicked = () => {\n          console.info(`home clicked`);\n          history.replace(\"/home\")\n      }\n\n      return (\n          <div>\n            <div\n                className=\"flex items-center justify-between mh-4\"\n                style={{\n                  width: '100%',\n                  minWidth: size,\n                  position: 'relative',\n                }}\n            >\n            <div className=\"flex items-center justify-between mh-4 mt-2\">\n              <img className=\"h-20 w-60 ml-4\" src={menuIcon} alt=\"\" draggable={false} onClick={onHomeClicked} />\n              <div className=\"flex flex-col justify-between ml-2\">\n                {/*<p className=\"font-righteous text-white text-xl\">Walter The Rabbit</p>*/}\n              </div>\n            </div>\n              {/*right*/}\n              <div className=\"flex items-center\">\n                <div className=\"flex flex-col items-end justify-end\">\n                    {!disabled && !account && <p className=\"text-white text-sm mr-4\">\n                        {status}\n                    </p>}\n                  {!disabled && !account && name && <p className=\"text-white mr-2\">{name}</p>}\n                </div>\n                  {\n                      !disabled && name && <Dropdown\n                          onDisconnect={onDisconnect}\n                          onPayments={onPaymentsClick}\n                          connectionStatus={status}\n                          account={account}\n                          ensName={ensName}\n                      />\n                  }\n              </div>\n\n            </div>\n\n          </div>\n\n    );\n    }\n;\n\ninterface Props {\n  size: number;\n  onDisconnect?: () => void;\n  onSelectAccount?: () => void;\n  items: IMenuItem[];\n  disabled?: boolean;\n  status: string;\n  ensName: string | null;\n  account?: string;\n}\n","export default __webpack_public_path__ + \"static/media/globe.78022863.png\";","import React from 'react';\nimport Modal from 'react-modal';\nimport { chainData } from '../consts/chains';\nimport { ellipseAddress } from '../helpers';\n\nexport const AccountModal = ({\n  accounts,\n  account = '',\n  open,\n  onClose,\n  onSelect,\n}: {\n  accounts: string[];\n  account?: string;\n  open: boolean;\n  onClose: () => void;\n  onSelect: (account: string) => void;\n}) => {\n  return (\n    <Modal\n      onRequestClose={onClose}\n      style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n        },\n      }}\n      isOpen={open}\n    >\n      <h2 className=\"mb-4\">Select Wallet</h2>\n      {accounts.map(item => {\n        const [namespace, reference, address] = item.split(':');\n        if (!chainData[namespace] || !chainData[namespace][reference]) {\n          return <></>;\n        }\n        const data = chainData[namespace][reference];\n        const disabled = namespace === 'solana'; // disable solana for now\n\n        return (\n          <div\n            key={item}\n            onClick={() => onSelect(item)}\n            className=\"flex items-center mt-2 mb-2 border-2 p-2 rounded-xl cursor-pointer\"\n            style={{\n              borderColor: `rgb(${data.rgb})`,\n              boxShadow: account === item ? `0 0 10px rgb(${data.rgb})` : 'none',\n              backgroundColor: disabled ? `rgba(0,0,0,.3)` : 'transparent',\n            }}\n          >\n            <img className=\"w-10 h-10 rounded-full mr-2\" src={data.logo} alt={namespace} />\n            <div>\n              <p>{data.name}</p>\n              <p>{ellipseAddress(address)}</p>\n            </div>\n          </div>\n        );\n      })}\n    </Modal>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/qrCodeIcon.2d8128ac.svg\";","export default __webpack_public_path__ + \"static/media/qrCodeScanning.91cdebd5.svg\";","export default __webpack_public_path__ + \"static/media/qrCodeBar.bf25eaae.svg\";","import { createSelector } from 'reselect';\n\nimport { IUserState, IRootState } from '../../models';\n\nexport const selectUserState = (rootState: IRootState): IUserState => {\n  return rootState.userState;\n};\n\nexport const selectIsLogged = createSelector([selectUserState], userState => {\n  return userState.isLogged;\n});\n\nexport const selectUserLoading = createSelector([selectUserState], userState => {\n  return userState.loading;\n});\n\nexport const selectAccount = createSelector([selectUserState], userState => {\n  return userState.account;\n});\n\nexport const selectUserNonce = createSelector([selectUserState], userState => {\n  return userState.nonce;\n});\n\nexport const selectUserAccount = createSelector([selectUserState], userState => {\n  return userState.account;\n});\n\nexport const selectAccountInfo = createSelector([selectUserState], userState => {\n  return userState.accountInfo;\n});\n\nexport const selectEnsName = createSelector([selectUserState], userState => {\n  return userState.ensName;\n});\n\nexport const selectTickers = createSelector([selectUserState], userState => {\n  return userState.tickers;\n});\n\nexport const selectCreateTransaction = createSelector([selectUserState], userState => {\n  return userState.transactionData;\n});\n\nexport const selectTransactionInProgress = createSelector([selectUserState], userState => {\n  return userState.transactionInProgress;\n});\n\nexport const selectBuyTransaction = createSelector([selectUserState], userState => {\n  return userState.transactionInfo;\n});\n\nexport const selectCurrentOrder = createSelector([selectUserState], userState => {\n  return userState.order;\n});\n\nexport const selectMerchantInfo = createSelector([selectUserState], userState => {\n  return userState.merchantInfo;\n});\n","import {ITicker} from \"../models\";\n\nfunction findTicker(currencySymbol: string, tickers: ITicker[]) {\n    let ethTicker = null;\n    try {\n        ethTicker = tickers ? tickers.find(value => value.currency === currencySymbol) : null;\n    } catch (e) {\n        console.info(`error searching for ticker ${currencySymbol}: ${e}`)\n    }\n    return ethTicker;\n}\n\nexport const convertTokenToUSD = (value: number, tokenSymbol: string, tickers: ITicker[]): number | null => {\n    let ethTicker = findTicker(tokenSymbol, tickers);\n    let balanceUsd: number | null;\n    if (ethTicker) {\n        balanceUsd = value * ethTicker.price;\n        console.info(`${value} ${tokenSymbol} = ${balanceUsd} USD -  Price 1 ${tokenSymbol} = ${ethTicker?.price} USD`)\n    } else {\n        console.info(`tickers are not available`)\n        balanceUsd = null;\n    }\n    return balanceUsd;\n};\n\nexport const convertUSDtoToken = (value: number, token: string, tickers: ITicker[]): number | null => {\n    let ethTicker = findTicker(token, tickers);\n    let balanceUsd: number | null;\n    if (ethTicker) {\n        balanceUsd = value / ethTicker.price;\n        console.info(`converting ${value} USD = ${balanceUsd} ${token} - Price 1 ${token} = ${ethTicker?.price} USD`)\n    } else {\n        console.info(`ticker are not available for ETH`)\n        balanceUsd = null;\n    }\n    return balanceUsd;\n};\n","export interface IOrderParams {\n  externalOrderId: string,\n  amount: number,\n  orderTrackingId: string,\n  merchantAddress: string,\n}\n\nexport interface ITransactionStatus extends IOrderParams {\n  transactionId: string,\n}\n\nexport const extractOrderFromUrl = (url: string, requireStatusItems: boolean = false) : IOrderParams => {\n  if (!url) {\n    throw new Error(\"input url must be not empty\");\n  }\n  let queryString = url;\n  if (url.includes('?')) {\n    queryString = url.substring(url.lastIndexOf('?'))\n  }\n  const parsed = new URLSearchParams(queryString);\n  console.log(`url: ${url} queryString: ${queryString} parsed: ${parsed}`);\n  const amount = Number(parsed.get(\"amount\"));\n  const externalOrderId = parsed.get(\"orderId\");\n  const orderTrackingId = parsed.get(\"orderTrackingId\");\n  const merchantAddress = parsed.get(\"merchantAddress\");\n  console.log(`trackingId: ${orderTrackingId} orderId: ${externalOrderId} amount: ${amount}`);\n\n  if (!requireStatusItems && (!externalOrderId|| !amount || !merchantAddress)) {\n    throw new Error(\"orderId, merchantAddress and amount are required.\");\n  }\n\n  return {\n    externalOrderId: externalOrderId || \"\",\n    amount: amount,\n    orderTrackingId: orderTrackingId || \"\",\n    merchantAddress: merchantAddress || \"\",\n  }\n}\n\nexport const extractTransactionIdFromUrl = (url: string) : ITransactionStatus => {\n  if (!url) {\n    throw new Error(\"input url must be not empty\");\n  }\n  let queryString = url;\n  if (url.includes('?')) {\n    queryString = url.substring(url.lastIndexOf('?'))\n  }\n  const parsed = new URLSearchParams(queryString);\n  console.log(`url: ${url} queryString: ${queryString} parsed: ${parsed}`);\n  const transactionId = parsed.get(\"transactionId\");\n  const orderTrackingId = parsed.get(\"orderTrackingId\");\n\n  if (!transactionId || !orderTrackingId) {\n    throw new Error(\"transaction id or orderTrackingId are missing\");\n  }\n\n  const orderData = extractOrderFromUrl(url, true);\n  return {\n    externalOrderId: orderData.externalOrderId,\n    merchantAddress: orderData.merchantAddress,\n    amount: orderData.amount,\n    transactionId: transactionId,\n    orderTrackingId: orderTrackingId,\n  }\n}\n","import React, {useEffect, useState} from 'react';\nimport QRIcon from '../assets/images/qrCodeIcon.svg';\nimport QRTarget from '../assets/images/qrCodeScanning.svg';\nimport QRLine from '../assets/images/qrCodeBar.svg';\nimport {useHistory} from \"react-router-dom\";\nimport {useWalletConnectClient} from \"../contexts/walletConnect\";\nimport {getNonZeroAccountBalance} from \"../helpers/tx\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectCreateTransaction, selectTickers} from \"../store/selector\";\nimport numeral from \"numeral\";\nimport {userAction} from \"../store/actions\";\nimport {toast} from \"react-toastify\";\nimport {QrReader} from \"react-qr-reader\";\nimport {convertTokenToUSD, convertUSDtoToken} from \"../helpers/currency\";\nimport {extractOrderFromUrl, IOrderParams} from \"../utils/path_utils\";\nimport {useLocation} from \"react-use\";\nimport background from '../assets/images/background/background_landscape.png';\n\n/**\n * https://test.jxndao.com/storefront/home\n * or\n * http://localhost:3000/storefront/home?orderId=1&amount=0.25&merchantAddress=0x1151B4Fd37d26B9c0B59DbcD7D637B46549AB004&orderTrackingId=6020fb4d-02e1-41c7-9570-584584e0e3a1\n * http://localhost:3000/storefront/home?orderId=8&amount=0.45\n */\nexport const HomePage = () => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  let query = useLocation().search;\n  const [ loading, setLoading ] = useState(false)\n  const [ scanning, setScanning ] = useState(false)\n  const [ qrCodeUrl, setQrCodeUrl ] = useState('')\n  const [ redirected, setRedirected ] = useState(false)\n  const [ transactionCreatedLock, setTransactionCreatedLock ] = useState(false)\n  const { accounts, balances, refreshBalances } = useWalletConnectClient();\n\n  const accountBalance = getNonZeroAccountBalance(accounts, balances);\n  console.info(`selected account:${accountBalance.account} balance:${accountBalance.balanceString} token:${accountBalance.token}`)\n\n  const tickers = useSelector(selectTickers)\n\n  const trxCreated = useSelector(selectCreateTransaction)\n\n  useEffect(() => {\n    console.info(`useEffect transactionCreatedLock: ${transactionCreatedLock} trxCreated: ${trxCreated} transaction: ${trxCreated?.transaction}`)\n    if (trxCreated?.transaction && trxCreated.transaction.value && !transactionCreatedLock) {\n      setTransactionCreatedLock(true);\n      if (!redirected) {\n        history.push(\"/buy\");\n      } else {\n        history.replace(\"/buy\");\n      }\n    }\n  }, [trxCreated, transactionCreatedLock, setTransactionCreatedLock, history]);\n\n  useEffect(() => {\n    if (query && tickers?.length > 0) {\n      console.info(`detected order query: ${query}`)\n\n      try {\n        const order = extractOrderFromUrl(query);\n        console.log(`orderTrackingId: ${order.orderTrackingId} externalOrderId: ${order.externalOrderId} amount: ${order.amount}`);\n        if (order.orderTrackingId && order.amount && !redirected) {\n          setRedirected(true);\n          createTransaction(order);\n        } else {\n          console.log(`not creating trx`)\n        }\n      } catch (e: any) {\n        console.log(e);\n        toast.error(`error scanning for url ${e?.message}`, {autoClose: 600});\n      }\n    }\n\n  }, [query, tickers]);\n\n\n  const startScanning = (): void => {\n    console.info(`starting scanning....`)\n    setScanning(!scanning);\n  }\n\n  const stopScanning = (): void => {\n    console.info(`stop scanning....`)\n    setScanning(false);\n  }\n\n  const createTransaction = (order: IOrderParams): void => {\n    const paymentSubtotalUsd = order.amount;\n    const currencySymbol = accountBalance.token;\n    const ethTotal = convertUSDtoToken(paymentSubtotalUsd, currencySymbol, tickers);\n    if (!ethTotal) {\n      toast.error(`Could not convert value to crypto. Invalid tickers ${tickers.length}`);\n      return;\n    }\n    setLoading(true);\n\n    if (!order.orderTrackingId) {\n      toast.error(\"Invalid order tracking ID\")\n    } else {\n      dispatch(userAction.setCreateTransaction({account: accountBalance.account, amount: ethTotal, orderTrackingId: order.orderTrackingId}));\n    }\n  };\n\n  const onHomeClick = async () => {\n    console.info(`refreshing balances `)\n    await refreshBalances(accounts);\n  }\n\n  const balanceN = Number(accountBalance.balanceString);\n  const currencySymbol = accountBalance.token;\n  const balanceUSD = convertTokenToUSD(balanceN, currencySymbol, tickers);\n\n  function processScanResult(resultText: string) {\n    stopScanning();\n    try {\n      setQrCodeUrl(resultText);\n      console.info(`qr ${resultText}`)\n      const order = extractOrderFromUrl(resultText);\n      createTransaction(order);\n    } catch (e) {\n      console.info(`Invalid QrCode url`);\n      toast.error(`Invalid QrCode url`);\n    }\n  }\n\n  const qrCode = <QrReader\n      onResult={(result, error) => {\n        if (!!result) {\n          console.log(result?.getText());\n          processScanResult(result.getText());\n        }\n\n        if (!!error && error.message) {\n          console.info(error || \"\");\n        }\n      }}\n      constraints={{ facingMode : \"environment\" }}\n      scanDelay={300}\n      containerStyle={{overflow: 'initial'}}\n      videoStyle={{height: '100vh', width: '100vw', objectFit: 'cover', overflow: 'initial'}}\n      className=\"\"\n  />\n\n  return (\n      <div style={{\n        backgroundImage: `url(${background})`,\n        backgroundSize: 'cover',\n        transform: \"scale(1.1)\",\n        position: \"absolute\",\n        filter: \"blur(0px) brightness(100%)\",\n        backgroundRepeat: \"repeat\",\n        width: \"100%\",\n        height: \"100%\",\n        backfaceVisibility: \"hidden\"\n      }}>\n        <div className=\"grid\">\n        {scanning && qrCode}\n          <div className=\"absolute mt-10 w-full h-full\">\n            <div className=\"h-full flex justify-center items-center\">\n              <div className=\"p-10 flex flex-col justify-between\">\n                { (loading) ?\n                    <div className=\"w-20 h-20 mt-10 mb-10\" style={{alignSelf: 'center'}}>\n                      <div className=\"thecube w-20 h-20\" style={{alignSelf: 'center'}}>\n                        <div className=\"cube c1\"/>\n                        <div className=\"cube c2\"/>\n                        <div className=\"cube c4\"/>\n                        <div className=\"cube c3\"/>\n                      </div>\n                    </div>\n                    :\n                        !scanning ?\n                          <img className=\"w-1/2 h-1/3 mb-4 cursor-pointer\" style={{alignSelf: 'center'}}\n                           src={QRIcon} alt=\"\" onClick={startScanning} />\n                          :\n                          <div className=\"grid w-1/2 h-1/3 mb-4\" onClick={startScanning}\n                               style={{alignSelf: 'center', backgroundImage: `url(${QRTarget})`, backgroundSize: 'cover', overflow: 'initial'}}>\n                            <img className=\"scan w-full\"\n                                 src={QRLine} alt=\"\" />\n                          </div>\n                }\n                <p className=\"text-white mt-8 text-center font-bold\">Scan Payment QR</p>\n                <div className=\"mt-4\">\n\n                  <p className=\"font-Righteous text-center text-secondary text-sm\" style={{fontStyle: 'normal',}}>\n                    Scan the payment QR code provided by the store to checkout</p>\n                </div>\n                <div className=\"flex items-center justify-center mt-10\">\n                  <div className=\"w-full flex flex-col items-center justify-center bg-white font-secondary text-secondary bg-opacity-10 py-1 px-2 rounded-10xl\" onClick={onHomeClick}>\n                    <p style={{fontFamily: 'Righteous', fontStyle: 'normal',}}\n                       className=\"text-start text-xs mr-2 mt-2\">Current Balance</p>\n                    <div className=\"flex items-center\">\n                      <div className=\"text-center font-bold\">\n                        <p style={{fontSize: \"xx-large\", fontFamily: 'Montserrat', fontStyle: 'normal',}} >\n                          {\n                            balanceUSD ? `$ ${numeral(balanceUSD).format('0,0.00')}`\n                                : ''\n                          }\n                        </p>\n                      </div>\n                    </div>\n                    <div className=\"flex items-center mb-2\">\n                      <div className=\"font-righteous text-center font-bold\">\n                        <p>\n                          {\n                            balanceN ? numeral(balanceN).format('0.000000')\n                                :accountBalance.balanceString.substring(0, accountBalance.balanceString.length > 6 ? 6 : accountBalance.balanceString.length - 1)\n                          }\n                        </p>\n                      </div>\n                      <p className=\"font-righteous text-white text-center font-bold text-sm ml-1\">\n                        {currencySymbol}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n  );\n};\n","import React from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\n\nimport {HomePage} from './home';\n\nexport const Dashboard = () => {\n    console.info(`loading dashboard`);\n\n    let mainPage = HomePage;\n    return (\n      <div className=\"w-full h-full flex-1\">\n        <Switch>\n          <Route path=\"/home\" component={mainPage} />\n          <Redirect to=\"/home\" />\n        </Switch>\n      </div>\n    );\n}\n","export default __webpack_public_path__ + \"static/media/walter_head.018a4517.png\";","export default __webpack_public_path__ + \"static/media/text_bubble_small.38285679.svg\";","export default __webpack_public_path__ + \"static/media/1.21ec9026.png\";","export default __webpack_public_path__ + \"static/media/2.6bb360df.png\";","export default __webpack_public_path__ + \"static/media/3.12048e5f.png\";","export default __webpack_public_path__ + \"static/media/4.3b9e1892.png\";","export default __webpack_public_path__ + \"static/media/5.3613704f.png\";","export default __webpack_public_path__ + \"static/media/7.26326f11.png\";","import Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport nft1 from '../assets/images/collection/1.png';\nimport nft2 from '../assets/images/collection/2.png';\nimport nft3 from '../assets/images/collection/3.png';\nimport nft4 from '../assets/images/collection/4.png';\nimport nft5 from '../assets/images/collection/5.png';\nimport nft6 from '../assets/images/collection/7.png';\nimport React from \"react\";\n\nexport const SwiperGallery = () => {\n    const settings = {\n        dots: false,\n        infinite: true,\n        slidesToShow: 1,\n        slidesToScroll: 1,\n        centerMode: true,\n        centerPadding: \"20px\",\n        autoplay: true,\n        autoplaySpeed: 3000,\n        pauseOnHover: true,\n        adaptiveHeight: true,\n    };\n    return (\n        <div className=\"slider-container\">\n            <Slider {...settings}>\n                <div className=\"p-1\">\n                    <img className=\"z-0 object-contain\" src={nft1} alt=\"\"/>\n                </div>\n                <div className=\"p-1\">\n                    <img className=\"z-0 \" src={nft2} alt=\"\"/>\n                </div>\n                <div className=\"p-1\">\n                    <img className=\"z-0 \" src={nft3} alt=\"\"/>\n                </div>\n                <div className=\"p-1\">\n                    <img className=\"z-0 object-contain\" src={nft4} alt=\"\"/>\n                </div>\n                <div className=\"p-1\">\n                    <img className=\"z-0 object-contain\" src={nft5} alt=\"\"/>\n                </div>\n                <div className=\"p-1\">\n                    <img className=\"z-0 object-contain\" src={nft6} alt=\"\"/>\n                </div>\n            </Slider>\n        </div>\n    );\n};\n","import React, { useState } from 'react';\nimport QRCodeStyling from 'qr-code-styling';\nimport logoIcon from '../assets/images/walter_head.png';\nimport mainCharacter from '../assets/images/anim/superWalter.webp';\nimport textBubbleSmall from '../assets/images/background/text_bubble_small.svg';\nimport background from '../assets/images/background/background_landscape.png';\nimport logo from '../assets/images/walterLogoWhiteBorder.svg';\nimport star from '../assets/images/star.png';\nimport { useTranslation } from 'react-i18next';\nimport { useWalletConnectClient } from '../contexts/walletConnect';\nimport { toast } from 'react-toastify';\nimport { MouseParallaxChild, MouseParallaxContainer } from 'react-parallax-mouse';\nimport { SwiperGallery } from '../components/swiper';\n\nexport const Login = () => {\n  const { qrCodeUri } = useWalletConnectClient();\n  const [showQRCode, setShowQRCode] = useState(false);\n  const [clickCounter, setClickCounter] = useState(0);\n  const { t } = useTranslation(['special']);\n\n  const [rotateStar, setRotateStar] = useState(false);\n  const connectWalletEnabled = false;\n\n  React.useEffect(() => {\n    console.log(`setting qr code ${qrCodeUri}`);\n    if (qrCodeUri) {\n      const qrCode = new QRCodeStyling({\n        width: 260,\n        height: 260,\n        type: 'svg',\n        data: qrCodeUri,\n        dotsOptions: {\n          type: 'dots',\n          gradient: {\n            type: 'linear',\n            rotation: 90,\n            colorStops: [\n              { offset: 0.4, color: '#000000' },\n              { offset: 0.9, color: '#000000' }\n            ]\n          }\n        },\n        cornersDotOptions: {\n          color: '#7214a7'\n        },\n        cornersSquareOptions: {\n          color: '#f91f30',\n          type: 'extra-rounded'\n        },\n        backgroundOptions: {\n          color: 'rgb(255,255,255)'\n        }\n      });\n\n      const qrCodeElement = document.getElementById('qrcode') as any;\n      if (qrCodeElement) {\n        qrCodeElement.innerHTML = '';\n        qrCode.append(qrCodeElement);\n      }\n\n    }\n  }, [qrCodeUri]);\n\n\n  function onCopyLinkClicked() {\n    navigator.clipboard.writeText(qrCodeUri || '');\n    toast.info('Copied', {\n      autoClose: 1200\n    });\n  }\n\n  function onRotateStar() {\n    setRotateStar(!rotateStar);\n  }\n\n\n  function goBack() {\n    if (clickCounter > 0) {\n      setClickCounter(clickCounter - 1);\n    }\n  }\n\n  function goForward() {\n    if (clickCounter === 1) {\n      if (connectWalletEnabled) {\n        setShowQRCode(true);\n        return;\n      } else {\n        //setClickCounter(0)\n      }\n    }\n    setClickCounter(clickCounter + 1);\n  }\n\n  {/*Collection Slider / video*/}\n  const gallery =\n  <div\n    className=\"h-full flex items-center justify-center\">\n    <div className=\"w-30 lg:w-40\">\n      <SwiperGallery />\n    </div>\n  </div>\n\n  const socialLinks = <div className=\"w-full mt-1 flex flex-1 items-center justify-between pl-4 pr-4\">\n    <a className=\"cursor-pointer\" rel={'noreferrer'} target={'_blank'}\n       href={'https://twitter.com/WalterRabbitNFT'}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"h-7 w-6\"\n        fill=\"currentColor\"\n        viewBox=\"0 0 24 24\">\n        <path\n          d=\"M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z\" />\n      </svg>\n    </a>\n    <a className=\"cursor-pointer\" rel={'noreferrer'} target={'_blank'}\n       href={'https://instagram.com/WalterRabbitNFT'}>\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        className=\"h-7 w-6\"\n        fill=\"currentColor\"\n        viewBox=\"0 0 24 24\">\n        <path\n          d=\"M12 2.163c3.204 0 3.584.012 4.85.07 3.252.148 4.771 1.691 4.919 4.919.058 1.265.069 1.645.069 4.849 0 3.205-.012 3.584-.069 4.849-.149 3.225-1.664 4.771-4.919 4.919-1.266.058-1.644.07-4.85.07-3.204 0-3.584-.012-4.849-.07-3.26-.149-4.771-1.699-4.919-4.92-.058-1.265-.07-1.644-.07-4.849 0-3.204.013-3.583.07-4.849.149-3.227 1.664-4.771 4.919-4.919 1.266-.057 1.645-.069 4.849-.069zm0-2.163c-3.259 0-3.667.014-4.947.072-4.358.2-6.78 2.618-6.98 6.98-.059 1.281-.073 1.689-.073 4.948 0 3.259.014 3.668.072 4.948.2 4.358 2.618 6.78 6.98 6.98 1.281.058 1.689.072 4.948.072 3.259 0 3.668-.014 4.948-.072 4.354-.2 6.782-2.618 6.979-6.98.059-1.28.073-1.689.073-4.948 0-3.259-.014-3.667-.072-4.947-.196-4.354-2.617-6.78-6.979-6.98-1.281-.059-1.69-.073-4.949-.073zm0 5.838c-3.403 0-6.162 2.759-6.162 6.162s2.759 6.163 6.162 6.163 6.162-2.759 6.162-6.163c0-3.403-2.759-6.162-6.162-6.162zm0 10.162c-2.209 0-4-1.79-4-4 0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.21-1.791 4-4 4zm6.406-11.845c-.796 0-1.441.645-1.441 1.44s.645 1.44 1.441 1.44c.795 0 1.439-.645 1.439-1.44s-.644-1.44-1.439-1.44z\" />\n      </svg>\n    </a>\n    <a className=\"cursor-pointer\" rel={'noreferrer'} target={'_blank'}\n       href={'https://discord.gg/UYcnzBnRQq'}>\n      <svg\n        className=\"h-7 w-6\"\n        fill=\"currentColor\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\">\n        <path\n          d=\"M19.54 0c1.356 0 2.46 1.104 2.46 2.472v21.528l-2.58-2.28-1.452-1.344-1.536-1.428.636 2.22h-13.608c-1.356 0-2.46-1.104-2.46-2.472v-16.224c0-1.368 1.104-2.472 2.46-2.472h16.08zm-4.632 15.672c2.652-.084 3.672-1.824 3.672-1.824 0-3.864-1.728-6.996-1.728-6.996-1.728-1.296-3.372-1.26-3.372-1.26l-.168.192c2.04.624 2.988 1.524 2.988 1.524-1.248-.684-2.472-1.02-3.612-1.152-.864-.096-1.692-.072-2.424.024l-.204.024c-.42.036-1.44.192-2.724.756-.444.204-.708.348-.708.348s.996-.948 3.156-1.572l-.12-.144s-1.644-.036-3.372 1.26c0 0-1.728 3.132-1.728 6.996 0 0 1.008 1.74 3.66 1.824 0 0 .444-.54.804-.996-1.524-.456-2.1-1.416-2.1-1.416l.336.204.048.036.047.027.014.006.047.027c.3.168.6.3.876.408.492.192 1.08.384 1.764.516.9.168 1.956.228 3.108.012.564-.096 1.14-.264 1.74-.516.42-.156.888-.384 1.38-.708 0 0-.6.984-2.172 1.428.36.456.792.972.792.972zm-5.58-5.604c-.684 0-1.224.6-1.224 1.332 0 .732.552 1.332 1.224 1.332.684 0 1.224-.6 1.224-1.332.012-.732-.54-1.332-1.224-1.332zm4.38 0c-.684 0-1.224.6-1.224 1.332 0 .732.552 1.332 1.224 1.332.684 0 1.224-.6 1.224-1.332 0-.732-.54-1.332-1.224-1.332z\" />\n      </svg>\n    </a>\n  </div>;\n\n  const startDialog =\n    <div className=\"w-full\">\n      <a className=\"ml-8 mt-8 clickable cursor-pointer z-10\" style={{ alignSelf: 'start', position: 'absolute' }}\n         onClick={() => goBack()}>\n        {\n          clickCounter > 0 ?\n            <p className=\"font-righteous text-center text-black text-sm\">←</p> : <div />\n        }\n      </a>\n\n      <div className=\"w-full flex flex-col items-center justify-center textBubble\"\n           style={{\n             backgroundSize: 'cover',\n             alignSelf: 'center',\n             backgroundRepeat: 'no-repeat',\n             visibility: 'visible'\n           }}>\n\n        <div className=\"z-10 flex justify-center items-center\">\n          <a onClick={() => goForward()}>\n            {\n              clickCounter === 0 ?\n                <p className=\"w-60 mt-2 font-righteous text-center text-black\">{t('loginMessage1')}</p>\n                :\n                clickCounter === 1 ?\n                  <div className=\"w-60 mt-2 pl-4\"><p\n                    className=\" font-righteous text-center text-black\">{t('loginMessage2')}</p>\n                    {socialLinks}\n                  </div>\n                  :\n                  gallery\n            }\n          </a>\n        </div>\n\n\n      </div>\n\n    </div>;\n\n  const qrStartDialog =\n    <div className=\"\">\n      <div className=\"flex flex-col items-center \"\n           style={{\n             backgroundImage: `url(${textBubbleSmall})`,\n             width: '35rem',\n             height: '34rem',\n             backgroundSize: 'cover',\n             alignSelf: 'start',\n             marginLeft: '-160px',\n             marginTop: '-160px',\n             visibility: showQRCode ? 'visible' : 'hidden'\n           }}>\n        <div className=\"w-full flex flex-col items-center justify-center mt-8 pb-2\"\n             style={{ alignSelf: 'start' }}>\n\n          <div className=\"flex justify-center items-center\">\n            <p className=\"font-righteous text-center text-black\">Scan or Tap the QrCode <br />to connect with\n              WalletConnect v2</p>\n          </div>\n          <a href={qrCodeUri} className=\"z-10\">\n            <div className=\"flex items-center justify-center\">\n              <div id=\"qrcode\"\n                   className=\"flex items-center justify-center rounded-10xl overflow-hidden qrcode\">\n              </div>\n              <img className=\"w-20 h-20 absolute align-middle z-10\" src={logoIcon} alt=\"\" />\n            </div>\n\n          </a>\n          <p onClick={onCopyLinkClicked}\n             className=\"text-xs mt-1 cursor-pointer\">Copy link</p>\n\n        </div>\n      </div>\n    </div>;\n\n  let qrCodeDialog =\n    <div className=\"bg-footer\">\n      {/*bubble*/}\n      <div className=\"h-128 min-w-max flex flex-col items-center pl-16 pr-16 pb-16 pt-4\" onClick={() => {\n        setClickCounter(0);\n        setShowQRCode(false);\n      }}\n           style={{\n             backgroundImage: `url(${textBubbleSmall})`,\n             backgroundSize: 'cover',\n             alignSelf: 'start',\n             visibility: showQRCode ? 'visible' : 'hidden',\n             position: showQRCode ? 'relative' : 'relative'\n           }}>\n        <div className=\"flex flex-col items-center justify-center mt-8 pb-6\"\n             style={{ alignSelf: 'start' }}>\n          <div className=\"z-10 flex justify-center items-center\">\n            <p className=\"font-righteous text-center text-black\">Scan or Tap the QrCode <br />to connect with\n              WalletConnect v2</p>\n          </div>\n          <a href={qrCodeUri} className=\"z-10\">\n            <div className=\"flex items-center justify-center\">\n              <div id=\"qrcode\"\n                   className=\"flex items-center justify-center rounded-10xl overflow-hidden qrcode\">\n              </div>\n              <img className=\"w-20 h-20 absolute align-middle z-10\" src={logoIcon} alt=\"\" />\n            </div>\n\n          </a>\n          <p onClick={onCopyLinkClicked}\n             className=\"text-xs mt-1 cursor-pointer\">Copy link</p>\n        </div>\n      </div>\n    </div>;\n\n  return (\n    <div className=\"w-full h-full flex items-center overflow-auto\">\n\n      {/*Top left Logo*/}\n      <div className=\"w-full lg:w-6/12 sm:w-6/12 md:w-4/12 absolute oscillateVertically z-10\"\n           style={{ justifySelf: 'start', alignSelf: 'start' }}>\n        <img className=\"mainLogo h-20 sm:h-20 md:h-30 lg:h-30 absolute z-10\" src={logo} alt=\"\"\n             style={{ justifySelf: 'center', alignSelf: 'center' }} draggable={false} />\n      </div>\n\n      <MouseParallaxContainer\n        className=\"w-full h-full parallax flex justify-center items-center\"\n        containerStyles={{\n          width: '100%',\n          display: 'grid',\n          gridTemplateColumns: 'auto auto auto auto auto'\n        }}\n        resetOnLeave\n      >\n\n\n        {/* Background image */}\n        <MouseParallaxChild\n          factorX={0.01}\n          factorY={0.0}\n          updateStyles={{\n            backgroundImage: `url(${background})`,\n            backgroundSize: 'cover',\n            transform: 'scale(1.1)',\n            position: 'absolute',\n            filter: 'blur(0px) brightness(100%)',\n            backgroundRepeat: 'no-repeat',\n            width: '100%',\n            height: '100%',\n            backfaceVisibility: 'hidden'\n          }}\n        >\n          {/*Star on top right*/}\n          <div className=\"w-full flex justify-end\">\n            <img className={`h-8 w-8 rotatingStar ${rotateStar ? 'rotateIndefinitely' : ''}`}\n                 src={star} alt=\"\"\n                 style={{\n                   justifySelf: 'end',\n                   alignSelf: 'end'\n                 }} draggable={false}\n                 onClick={onRotateStar} />\n          </div>\n        </MouseParallaxChild>\n\n\n        <MouseParallaxChild\n          factorX={0.005}\n          factorY={0.0}\n          className=\"h-full w-full flex items-center justify-center\"\n        >\n          {/*main character section*/}\n          <div\n            className=\"w-full h-full mt-40 lg:mt-60 twoColumnContainer flex items-end justify-center\">\n            {/*Text Bubble*/}\n            {showQRCode ? <div /> : <div className=\"z-10 \"> {startDialog} </div>}\n            <img className=\"z-0 h-1/2 heightSmallerOnPortrait\" src={mainCharacter} alt=\"\" />\n          </div>\n        </MouseParallaxChild>\n      </MouseParallaxContainer>\n    </div>\n  );\n};\n\n","export default __webpack_public_path__ + \"static/media/menu_icon.7cde221c.svg\";","import React, {useState} from 'react';\nimport {useSelector} from 'react-redux';\n\nimport {AccountModal, Menu} from '../components';\n\nimport {Dashboard} from './dashboard';\nimport {Login} from './login';\nimport {Landing} from './landing';\n\nimport VaultIcon from '../assets/images/menu_icon.svg';\n\nimport { selectAccountInfo, selectEnsName } from '../store/selector';\nimport {useWalletConnectClient} from '../contexts/walletConnect';\n\nexport const Main = () => {\n  const ensName = useSelector(selectEnsName);\n  const accountInfo = useSelector(selectAccountInfo);\n  const [openSwitchAccount, setOpenSwitchAccount] = useState(false);\n\n  // Initialize the WalletConnect client.\n  const {\n    session,\n    isInitializing,\n    connect,\n    disconnect,\n    switchAccount,\n    initialized,\n    account,\n    isLoading,\n    accounts,\n  } = useWalletConnectClient();\n\n  const onSelectAccount = (item: string) => {\n    setOpenSwitchAccount(false);\n    switchAccount(item);\n  };\n\n  const onDisconnect = () => {\n    session && disconnect();\n  };\n\n  React.useEffect(() => {\n    if (initialized && !session) {\n      connect();\n    }\n  }, [initialized, connect, session]);\n\n  let menuItems = [\n    { route: '/home', icon: VaultIcon },\n  ];\n\n  let ens = ensName || null;\n  // if (!ensName) {\n  //   ens = accountInfo?.memberENSAddress;\n  // }\n\n  return (\n    <div className=\"h-screen w-screen flex flex-col\">\n      { account && <Menu\n        status={isLoading ? 'Connecting...' : account ? 'Connected' : 'Disconnected'}\n        onDisconnect={onDisconnect}\n        onSelectAccount={() => setOpenSwitchAccount(true)}\n        account={account}\n        ensName={ens}\n        items={menuItems}\n        size={200}\n        key={'topMenu'}\n      />}\n      {isLoading || isInitializing ? <Landing /> : account ? <Dashboard /> : <Login/>}\n      <AccountModal\n        account={account}\n        accounts={accounts}\n        open={openSwitchAccount}\n        onClose={() => setOpenSwitchAccount(false)}\n        onSelect={onSelectAccount}\n      />\n    </div>\n  );\n};\n"],"sourceRoot":""}